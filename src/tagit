#!/usr/bin/env sh
set -e

usage_text="usage: $(basename ${0}) -[M|m|p] [-d|--dryrun|--dry-run]"

# Transform long options to short ones:
for arg in "$@"; do
  shift
  case "$arg" in
    "--dryrun"|"--dry-run") set -- "$@" "-d" ;;
    *)                      set -- "$@" "$arg"
  esac
done

# Parse positional options:
option_count=0
while getopts "Mmpd" arg; do
  case ${arg} in
    d) dryrun=true;;
    p) bump=${arg}; option_count=$((option_count+1));;
    m) bump=${arg}; option_count=$((option_count+1));;
    M) bump=${arg}; option_count=$((option_count+1));;
  esac
done

# Only one incrementation option is allowed:
if [ "$option_count" -ne "1" ]; then
  echo "${usage_text}" && exit 1
fi

message="Git command not found. Git executable is required to tag git repositories."
command -v git >/dev/null 2>/dev/null || (echo "${message}" && exit 2)

message="Git repository not found. This command must be run within a git repository."
git rev-parse --git-dir >/dev/null 2>/dev/null || (echo "${message}" && exit 3)

version="$(git describe --tags 2>/dev/null || echo "0.0.0")"
bumpit="$(dirname "${0}")/bumpit"
clean="$("${bumpit}" -${bump} "${version}")"
dirty="$("${bumpit}" -${bump} --dirty "${version}")"

message="${dirty}"
test "x${dryrun}" = "xtrue" && echo "${dirty}" && exit 0

message="No changes to repository since last tag '${dirty}'."
test "x${clean}" != "x${dirty}" && echo "${message}" && exit 0

message="Unable to tag the repository with version '${dirty}'. The tag already exists."
git rev-parse "${dirty}" >/dev/null 2>/dev/null && (echo "${message}" && exit 4)

username="$( git config user.name || echo ${GIT_COMMITTER_NAME} )"
email="$( git config user.email || echo ${GIT_COMMITTER_EMAIL} )"
test "x${username}" = "x" && export GIT_COMMITTER_NAME="version-tools"
test "x${email}" = "x" && export GIT_COMMITTER_EMAIL="dev@null"

message="Unable to tag repository with version '${dirty}'. Does your user environment have your .gitconfig set with user.name and user.email?"
git tag -a "${dirty}" -m "" 2>/dev/null || (echo "${message}" && exit 5)

echo "Tagged repository with version '${dirty}'."
